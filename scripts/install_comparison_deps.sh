#!/bin/bash

echo "üîß INSTALACI√ìN DE DEPENDENCIAS PARA COMPARACI√ìN T√âCNICA"
echo "======================================================="

# Verificar que estamos en el entorno virtual
if [ -z "$VIRTUAL_ENV" ] && [ ! -f "venv/bin/activate" ]; then
    echo "‚ùå Error: Entorno virtual no encontrado"
    echo "üí° Ejecuta: source venv/bin/activate"
    exit 1
fi

# Activar entorno virtual si no est√° activo
if [ -z "$VIRTUAL_ENV" ]; then
    echo "üîÑ Activando entorno virtual..."
    source venv/bin/activate
fi

echo "‚úÖ Entorno virtual activo: $VIRTUAL_ENV"

# Funci√≥n para instalar y verificar paquetes
install_package() {
    local package=$1
    local description=$2
    
    echo -e "\nüì¶ Instalando $description..."
    
    if pip install "$package" --quiet; then
        echo "‚úÖ $description instalado exitosamente"
    else
        echo "‚ùå Error instalando $description"
        return 1
    fi
}

# Funci√≥n para verificar instalaci√≥n
verify_installation() {
    local package=$1
    local description=$2
    
    if python -c "import $package" 2>/dev/null; then
        echo "‚úÖ $description verificado"
        return 0
    else
        echo "‚ùå $description no disponible"
        return 1
    fi
}

echo -e "\nüöÄ INSTALANDO DEPENDENCIAS DE BENCHMARKING..."

# 1. Dependencias b√°sicas de sistema
install_package "psutil" "Monitor de procesos del sistema"

# 2. Selenium y dependencias
echo -e "\nüåê INSTALANDO SELENIUM..."
install_package "selenium" "Selenium WebDriver"
install_package "webdriver-manager" "WebDriver Manager"

# 3. Playwright (m√°s complejo)
echo -e "\nüé≠ INSTALANDO PLAYWRIGHT..."
if install_package "playwright" "Playwright"; then
    echo "üîß Instalando navegadores de Playwright..."
    if playwright install chromium --quiet 2>/dev/null; then
        echo "‚úÖ Navegador Chromium instalado"
    else
        echo "‚ö†Ô∏è  Error instalando navegadores (puede requerir permisos)"
    fi
fi

# 4. Dependencias adicionales para benchmark
echo -e "\nüìä INSTALANDO DEPENDENCIAS DE AN√ÅLISIS..."
install_package "matplotlib" "Gr√°ficos y visualizaci√≥n"
install_package "pandas" "An√°lisis de datos"

echo -e "\nüîç VERIFICANDO INSTALACIONES..."

# Verificar todas las dependencias
verify_installation "psutil" "PSUtil"
verify_installation "selenium" "Selenium"
verify_installation "playwright" "Playwright"

# Verificar Scrapy (ya deber√≠a estar instalado)
verify_installation "scrapy" "Scrapy"

echo -e "\nüìã RESUMEN DE INSTALACI√ìN:"
echo "=========================="

# Generar reporte de dependencias
python -c "
import sys
packages = ['scrapy', 'selenium', 'playwright', 'psutil', 'requests']

print('Paquete       | Estado    | Versi√≥n')
print('-' * 40)

for pkg in packages:
    try:
        module = __import__(pkg)
        version = getattr(module, '__version__', 'N/A')
        print(f'{pkg:<12} | ‚úÖ OK      | {version}')
    except ImportError:
        print(f'{pkg:<12} | ‚ùå Error   | No instalado')
"

echo -e "\nüí° PR√ìXIMOS PASOS:"
echo "=================="
echo "1. Ejecutar benchmark: python benchmark/performance_comparison.py"
echo "2. Ver ejemplos: python examples/playwright_scraper.py"
echo "3. Comparar resultados en benchmark/performance_report.txt"

echo -e "\n‚úÖ Instalaci√≥n de dependencias completada"
